---
# - name: Provision an EC2 Instance
#   hosts: localhost
#   vars_files:
#     - aws_secret.yml
#   gather_facts: false
#   tasks:
#     - name: Initialize Terraform
#       command: terraform init
#       args:
#         chdir: ./terraform_scripts/

#     - name: Apply Terraform script
#       command: terraform apply -auto-approve
#       args:
#         chdir: ./terraform_scripts/

#     - name: Run Terraform Output for instance_ip
#       command: terraform output -json instance_ip
#       args:
#         chdir: ./terraform_scripts/
#       register: tf_output

#     - name: Set Fact for instance_ip
#       set_fact:
#         ec2_nc: "{{ tf_output.stdout | from_json }}"

#     - name: Launch a new EC2 instance
#       amazon.aws.ec2_instance:
#         aws_access_key: "{{ aws_access_key }}"
#         aws_secret_key: "{{ aws_secret_key }}"
#         name: "ec2-nc1-test"
#         instance_type: t2.micro
#         image_id: ami-01103fb68b3569475
#         count: 1
#         region: us-east-2
#         network:
#           assign_public_ip: true
#       register: ec2
    
#     - name: debug ec2
#       debug:
#         msg: "{{ ec2.instances }}"

#     - name: Wait for SSH to come up
#       wait_for:
#         host: "{{ ec2.instances }}"
#         port: 22
#         delay: 60
#         timeout: 320
#         state: started
#       with_items: "{{ ec2.instances }}"

#     - name: Show public IP
#       debug:
#         var: item.public_ip
#       with_items: "{{ ec2.instances }}"

#     - name: debug ec2.instances
#       debug:
#         msg:
#           - public_ip = "{{ ec2.instances.public_ip }}"
#           - ip_final = "{{ ec2.instances.public_ip.network_interfaces.association.public)i }}"

#     - name: set instance ip var
#       set_fact:
#         instance_ip: "{{ ec2.instances.public_ip }}"

- name: Installation and configuration of a nextcloud instance
  hosts: "{{ instance_ip }}"
  become: true
  vars_files:
     - secret.yml
  vars:
    - dir_nextcloud: /var/www/nextcloud
    - db_type: mysql
    - db_name: nextcloud
    - nc_admin: nc_adm
    - mail_addr: mehdibennouar@protonmail.com
    - nc_config:
        - { key: 'trusted_domains', value: '*'}

  pre_tasks:
    - name: Update packages
      apt:
        update_cache: yes
        upgrade: 'yes'
        
    - name: Install docker compose and sudo
      apt:
        name: "{{ item }}"
        state: present
      with_items: 
        - docker-compose
        - sudo
        - php

  roles:
    - docker_deploy

  tasks:
    - name: Create nextcloud directory
      file:
        path: "{{ dir_nextcloud }}"
        state: directory

    - name: Change folder's permissions
      file:
        path: /var/www/html/
        owner: www-data
        group: www-data
        mode: '0744'
        recurse: yes

    # - name: Debug php occ 
    #   command: /var/www/html/occ
    #   register: try_occ

    # - name: debug it
    #   debug:
    #     msg: "{{ try_occ }}"

    - name: Complete nextcloud's installation
      template:
        src: /templates/nc_install.sh.j2
        dest: /tmp/nc_install.sh

    - name: change file permissions
      file:
        path: /tmp/nc_install.sh
        owner: root
        group: root
        mode: '0744'

    # - name: launch nextcloud script
    #   command: >
    #     ./nc_install.sh
    #   args:
    #     chdir: /tmp/
          
    - name: Create file dir
      file:
        path: "/home/www-data/files-nc/"
        state: directory
        mode: '0755'

    - name: Complete nextcloud's installation
      command: >
        docker exec -u www-data app_nc php occ maintenance:install \
        --database "{{ db_type }}" \
        --database-host "db_nc"
        --database-name "{{ db_name }}" \
        --database-user "{{ mysql_user }}" \
        --database-pass "{{ mysql_pwd }}" \
        --admin-user "{{ nc_admin }}" \
        --admin-pass "{{ nc_passwd }}" \
        --admin-email "{{ mail_addr }}"
      args:
          creates: /var/www/nextcloud/config/config.php
      register: setup_nc
      notify: Restart Apache

    - name: chanque skeleton nc
      lineinfile:
        path: /var/www/nextcloud/config/config.php
        line: "'skeletondirectory' => ''," 
        create: yes
    - name: Add trusted domains
      command: >
        docker exec -u www-data app_nc php occ config:system:set trusted_domains 2 --value="{{ item.value }}"
      loop: "{{nc_config}}"

    - name: Disable some applications
      command: >
        docker exec -u www-data app_nc php occ app:disable {{ item }}
      with_items:
      - dashboard
        - circles
        - weather_status
        - activity
        - photos
        - recommendations
        - firstrunwizard
        - nextcloud_announcements
        - contactsinteraction

    - name: Customization of the nextcloud instance
      command: >
        docker exec -u www-data app_nc php occ theming:config {{ item.key }} "{{ item.value }}"
      with_items:
        - { key: 'color', value: "#808000"}
        - { key: 'name', value: "KanzDrive"}
        - { key: 'url', value: "https://www.kanzdrive.com"}
        - { key: 'slogan', value: "Your own secure and fast cloud storage service."}

  handlers:
    - name: Restart Apache
      service:
        name: apache2
        state: restarted
